!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	main.F90	/^   real, allocatable :: A(/;"	v	program:main
ave	main.F90	/^   real, allocatable :: ave(/;"	v	program:main
b	mod_lorenzpar.F90	/^   real, parameter   ::  b=/;"	v	module:mod_lorenzpar
dt	main.F90	/^   real dt /;"	v	program:main
dyn	mod_dimensions.F90	/^      real dyn$/;"	k	type:variances
fex	m_fex.F90	/^subroutine fex(/;"	s	module:m_fex
fg	main.F90	/^   real, allocatable :: fg(/;"	v	program:main
fname	m_readinfile.F90	/^   character(len=8) fname /;"	v	module:m_readinfile
i	main.F90	/^   in/;"	v	program:main
ih	main.F90	/^   integer, allocatable :: ih(/;"	v	program:main
ini	mod_dimensions.F90	/^      real ini$/;"	k	type:variances
j	main.F90	/^   integer i,j,/;"	v	program:main
lag	m_readinfile.F90	/^   integer lag /;"	v	module:m_readinfile
lorenz	m_lorenz.F90	/^subroutine lorenz(/;"	s	module:m_lorenz
m	main.F90	/^   integer i,j,m$/;"	v	program:main
m_fex	m_fex.F90	/^module m_fex$/;"	m
m_lorenz	m_lorenz.F90	/^module m_lorenz$/;"	m
m_measurements	m_measurements.F90	/^module m_measurements$/;"	m
m_readinfile	m_readinfile.F90	/^module m_readinfile$/;"	m
main	main.F90	/^program main /;"	p
measurements	m_measurements.F90	/^subroutine measurements(/;"	s	module:m_measurements
mes	mod_dimensions.F90	/^      real mes$/;"	k	type:variances
mod_dimensions	mod_dimensions.F90	/^module mod_dimensions$/;"	m
mod_lorenzpar	mod_lorenzpar.F90	/^module mod_lorenzpar$/;"	m
mode	m_readinfile.F90	/^   integer mode /;"	v	module:m_readinfile
na	main.F90	/^   integer na,/;"	v	program:main
nb	main.F90	/^   integer na,nb,/;"	v	program:main
nc	main.F90	/^   integer na,nb,nc$/;"	v	program:main
ndim	mod_dimensions.F90	/^   integer ndim /;"	v	module:mod_dimensions
neq	mod_dimensions.F90	/^   integer, parameter :: neq=/;"	v	module:mod_dimensions
nrmes	mod_dimensions.F90	/^   integer nrmes /;"	v	module:mod_dimensions
nrobs	mod_dimensions.F90	/^   integer, parameter :: nrobs=/;"	v	module:mod_dimensions
nrsamp	mod_dimensions.F90	/^   integer nrsamp /;"	v	module:mod_dimensions
nrtobs	mod_dimensions.F90	/^   integer nrtobs /;"	v	module:mod_dimensions
obs	main.F90	/^   real, allocatable :: obs(/;"	v	program:main
obsdt	m_readinfile.F90	/^   real obsdt /;"	v	module:m_readinfile
obsdt	main.F90	/^   real obsdt /;"	v	program:main
r	mod_lorenzpar.F90	/^   re/;"	v	module:mod_lorenzpar
readinfile	m_readinfile.F90	/^subroutine readinfile(/;"	s	module:m_readinfile
ref	main.F90	/^   real, allocatable :: ref(/;"	v	program:main
sigma	mod_lorenzpar.F90	/^   real, parameter   ::  sigma=/;"	v	module:mod_lorenzpar
var	main.F90	/^   real, allocatable :: var(/;"	v	program:main
variances	mod_dimensions.F90	/^   type variances$/;"	t	module:mod_dimensions
vars	main.F90	/^   type(variances) vars$/;"	v	program:main
